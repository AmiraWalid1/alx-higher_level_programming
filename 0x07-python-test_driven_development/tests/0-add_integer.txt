The ``0-add_integer`` module
===============================

Using ``0-add_integer``
--------------------------

Import module:
    >>> module = __import__("0-add_integer")
    >>> add_integer = module.add_integer

Check docstring is not empty:
    >>> len(module.__doc__) > 1
    True
    >>> len(add_integer.__doc__) > 1
    True

Basic test with integer:
    >>> add_integer(1, 2)
    3
    >>> add_integer(1, -2)
    -1
    >>> add_integer(-1, 2)
    1
    >>> add_integer(-1, -2)
    -3

Test with float:
    >>> add_integer(1.2, 2.6)
    3
    >>> add_integer(1.4, -2.7)
    -1
    >>> add_integer(-1.6, 2.9)
    1
    >>> add_integer(-1.8, -2.4)
    -3
    >>> add_integer(1)
    99
    >>> add_integer(1.7)
    99

Check float overflow:
    >>> print(add_integer(float('inf'), 2))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(2, float('inf')))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(float('inf'), float('inf')))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Check float NaN:
    >>> print(add_integer(float('NaN'), 2))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> print(add_integer(2, float('NaN')))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> print(add_integer(float('NaN'), float('NaN')))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Test raise error:
    >>> add_integer("hi")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    >>> add_integer(1.2, "amira")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer("amira", 4)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer("hi", "amira")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer([1, 2], 4)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer((1,2), "amira")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(2, {1, 2})
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(2, {1:"first"})
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test None:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(None, 4)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(2, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test Exception (not raising):
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
